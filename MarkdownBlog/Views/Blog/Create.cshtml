@model MarkdownBlog.Models.BlogPost

@{
    ViewBag.Title = "Create";
}
<div class="row">
    <div class="span6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>Create Blog Post</legend>


                <div class="editor-field">
                    @Html.EditorFor(model => model.BlogPostTitle)
                    @Html.ValidationMessageFor(model => model.BlogPostTitle)
                </div>


                <div class="editor-field">
                    <div id="wmd-button-bar"></div>
                    @Html.TextAreaFor(model => model.BlogPostText, new { id = "wmd-input" })
                    @Html.ValidationMessageFor(model => model.BlogPostText)
                </div>

                <p class ="form-buttons">
                    <input type="submit" value="Create" class ="btn btn-medium"/>
                    <button class="btn btn-medium" type="button" onclick="location.href='@Url.Action("Index", "Blog")'">Cancel</button>
                </p>
            </fieldset>
        }
    </div>
    <div class="span6">
        <div class="previewArea">
            <legend>Preview</legend>
    <h3 id="title-preview"></h3>
            <div id="wmd-preview"></div>
        </div>
    </div>
    </div>
    <script type="text/javascript">
        var converter = Markdown.getSanitizingConverter();
        var editor = new Markdown.Editor(converter);
        $('#title-preview').text($('#BlogPostTitle').val())
        editor.run();
        $('#BlogPostTitle').change(function () { $('#title-preview').text($('#BlogPostTitle').val()) });;
    </script>

   

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
